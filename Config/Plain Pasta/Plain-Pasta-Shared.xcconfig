//
// Plain-Pasta-Shared.xcconfig
//
// Generated by BuildSettingExtractor on 10/29/20
// https://github.com/dempseyatgithub/BuildSettingExtractor
//

// Asset Catalog App Icon Set Name
// 
// Name of an asset catalog app icon set whose contents will be merged into the
// `Info.plist`.

ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon



// Code Signing Entitlements
// 
// The path to a file specifying code-signing entitlements.

CODE_SIGN_ENTITLEMENTS = PlainPasta/Plain Pasta.entitlements



// Code Signing Identity
// 
// The name, also known as the *common name*, of a valid code-signing certificate in a
// keychain within your keychain path. A missing or invalid certificate will cause a
// build error.

CODE_SIGN_IDENTITY = Mac Developer



// Code Signing Style
// 
// This setting specifies the method used to acquire and locate signing assets. Choose
// `Automatic` to let Xcode automatically create and update profiles, app IDs, and
// certificates. Choose `Manual` to create and update these yourself on the developer
// website.

CODE_SIGN_STYLE = Automatic



// Combine HiDPI Images
// 
// Combines image files at different resolutions into one multi-page TIFF file that is
// HiDPI compliant for macOS 10.7 and later. Only image files in the same directory and
// with the same base name and extension are combined. The file names must conform to the
// naming convention used in HiDPI.

COMBINE_HIDPI_IMAGES = YES



// Current Project Version
// 
// This setting defines the current version of the project. The value must be a integer
// or floating point number, such as `57` or `365.8`.

CURRENT_PROJECT_VERSION = 1.3.0



// Development Team
// 
// The team ID of a development team to use for signing certificates and provisioning
// profiles.

DEVELOPMENT_TEAM = F2J52QJQ9Y



// Enable Hardened Runtime
// 
// Hardened Runtime defends your application by preventing modifications to its code and
// provides fine-grained controls over what can run in your process. Hardening the
// runtime also prevents access to sensitive resources unless your application
// pre-declares its intent to use them, which reduces the attack surface by eliminating
// unnecessary access.  These properties help prevent exploitation of your application
// and this capability is required for your app to be notarized.

ENABLE_HARDENED_RUNTIME = YES



// Framework Search Paths
// 
// This is a list of paths to folders containing frameworks to be searched by the
// compiler for both included or imported header files when compiling C, Objective-C,
// C++, or Objective-C++, and by the linker for frameworks used by the product. Paths are
// delimited by whitespace, so any paths with spaces in them must be properly quoted.

FRAMEWORK_SEARCH_PATHS = $(inherited)



// Info.plist File
// 
// The project-relative path to the property list file that contains the `Info.plist`
// information used by bundles. For details on information property list files, see
// [Information Property List
// Files](https://developer.apple.com/library/content/documentation/MacOSX/Conceptual/BPRuntimeConfig/Articles/ConfigFiles.html#//apple_ref/doc/uid/20002091-CJBJIEDH)
// in [Runtime Configuration
// Guidelines](https://developer.apple.com/library/content/documentation/MacOSX/Conceptual/BPRuntimeConfig/000-Introduction/introduction.html).

INFOPLIST_FILE = $(SRCROOT)/PlainPasta/Info.plist



// Runpath Search Paths
// 
// This is a list of paths to be added to the `runpath` search path list for the image
// being created. At runtime, `dyld` uses the `runpath` when searching for dylibs whose
// load path begins with `@rpath/`. See [Dynamic Library Programming
// Topics](https://developer.apple.com/library/content/documentation/DeveloperTools/Conceptual/DynamicLibraries/000-Introduction/Introduction.html).

LD_RUNPATH_SEARCH_PATHS = $(inherited) @executable_path/../Frameworks



// Marketing Version
// 
// This setting defines the user-visible version of the project. The value corresponds to
// the `CFBundleShortVersionString` key in your app's Info.plist.

MARKETING_VERSION = 1.3.0



// Product Bundle Identifier
// 
// A string that uniquely identifies the bundle. The string should be in reverse DNS
// format using only alphanumeric characters (`A-Z`, `a-z`, `0-9`), the dot (`.`), and
// the hyphen (`-`). This value is used as the `CFBundleIdentifier` in the `Info.plist`
// of the built bundle.

PRODUCT_BUNDLE_IDENTIFIER = software.level.PlainPasta



// Product Name
// 
// This is the basename of the product generated by the target.

PRODUCT_NAME = $(TARGET_NAME)



// Provisioning Profile
// 
// Must contain a profile name (or UUID). A missing or invalid profile will cause a build
// error. Use in conjunction with [DEVELOPMENT_TEAM] to fully specify provisioning
// profile.

PROVISIONING_PROFILE_SPECIFIER = 



// Swift Language Version
// 
// 

SWIFT_VERSION = 5.0
